---
- name: Set Python interpreter to suppress warnings
  set_fact:
    ansible_python_interpreter: "/usr/bin/python3"

- name: Create docker group
  ansible.builtin.group:
    name: docker
    state: present

- name: Create docker user (fix append warning)
  ansible.builtin.user:
    name: docker
    group: docker
    groups: docker
    append: yes
    create_home: yes

- name: Create /mnt/docker directory
  ansible.builtin.file:
    path: /mnt/docker
    state: directory
    owner: docker
    group: docker
    mode: '0755'

- name: Create table file in home directory
  ansible.builtin.copy:
    dest: /home/{{ ansible_user }}/table
    content: |
      speak
      loyal
      famous
      absorb
      ice
      skill
      galaxy
      about
      offer
      topple
      argue
      unusual
      sing
      evoke
    mode: '0644'
  become: no

- name: Find words containing letter 'o'
  ansible.builtin.command: awk '/o/ {print NR, $0}' /home/{{ ansible_user }}/table
  register: awk_output
  changed_when: false
  become: no

- name: Display awk results
  ansible.builtin.debug:
    var: awk_output.stdout_lines

- name: Install required packages
  block:
    - name: Install core dependencies
      ansible.builtin.apt:
        name:
          - pwgen
          - acl
        state: present

    - name: Install passlib via system package
      ansible.builtin.apt:
        name: python3-passlib
        state: present
  when: ansible_os_family == 'Debian'
  become: yes

- name: Install passlib on controller
  ansible.builtin.pip:
    name: passlib
    state: present
  delegate_to: localhost
  run_once: true
  become: no

- name: Generate password for test user
  ansible.builtin.shell: pwgen -s 16 1
  register: user_password
  changed_when: false
  no_log: true

- name: Create test group
  ansible.builtin.group:
    name: test
    state: present

- name: Create test user with generated password
  ansible.builtin.user:
    name: test
    password: "{{ user_password.stdout | password_hash('sha512') }}"
    group: test
    shell: /bin/bash
    create_home: yes
    home: /home/test

- name: Secure file deletion
  block:
    - name: Set temp permissions
      ansible.posix.acl:
        path: /home/{{ ansible_user }}
        entity: test
        etype: user
        permissions: rwx
        state: present
      become: yes

    - name: Delete table file
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/table
        state: absent
      become: yes
      become_user: test

    - name: Cleanup permissions
      ansible.posix.acl:
        path: /home/{{ ansible_user }}
        entity: test
        etype: user
        state: absent
      become: yes

- name: Verify file deletion
  ansible.builtin.stat:
    path: /home/{{ ansible_user }}/table
  register: file_stat

- name: Show deletion result
  ansible.builtin.debug:
    msg: "File successfully deleted"
  when: not file_stat.stat.exists
